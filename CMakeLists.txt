cmake_minimum_required(VERSION 3.1)
set(VCPKG_FEATURE_FLAGS versions)
set(libName marko-math)
project(${libName})
file(GLOB_RECURSE source_list "src/*.cpp" "src/*.hpp" "include/*.hpp")
set(staticLib ${libname}Stat)
set(CMAKE_CXX_FLAGS "-flto -std=c++20")
function(lto target)
  if(NOT "${CMAKE_BUILD_TYPE}" MATCHES "^Rel")
    return()
  endif()

  if(POLICY CMP0069)
    if(HAS_LTO)
      set_property(TARGET ${target} PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
    endif()
  else()
    if("${CMAKE_C_COMPILER_ID}" STREQUAL "GNU")
      if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS "4.5")
        target_compile_options(${target} PUBLIC -flto)
        set_property(TARGET ${target} APPEND_STRING PROPERTY LINK_FLAGS " -flto")
      endif()
    elseif("${CMAKE_C_COMPILER_ID}" STREQUAL "Clang")
      if(NOT CMAKE_C_COMPILER_VERSION VERSION_LESS "3.2")
        target_compile_options(${target} PUBLIC -flto)
        set_property(TARGET ${target} APPEND_STRING PROPERTY LINK_FLAGS " -flto")
      endif()
    elseif("${CMAKE_C_COMPILER_ID}" STREQUAL "Intel")
      set_property(TARGET ${target} PROPERTY INTERPROCEDURAL_OPTIMIZATION 1)
    elseif("${CMAKE_C_COMPILER_ID}" STREQUAL "SunPro")
      # Solaris Studio requires -xO4 or greater when using IPO, so set
      # here, cross fingers, and hope it overrides any other optimization
      # level (if -xO4 comes after others, it will).
      target_compile_options(${target} PUBLIC -xipo=2 -xO4)
      set_property(TARGET ${target} APPEND_STRING PROPERTY LINK_FLAGS " -xipo=2 -xO4")
    endif()
  endif()
endfunction()
add_library(${staticLib} STATIC ${source_list})
set(CMAKE_EXPORT_COMPILE_COMMANDS ON CACHE INTERNAL "")
execute_process( COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_BINARY_DIR}/compile_commands.json ${CMAKE_SOURCE_DIR}/compile_commands.json) # As of CMake 3.13 create_symlink also works on windows.
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_VERBOSE_MAKEFILE on)
set_target_properties(${staticLib} PROPERTIES PREFIX "")
cmake_policy(SET CMP0072 NEW)
target_link_libraries(${staticLib} PRIVATE )
enable_testing()
add_executable(tests ./tests/tests.cpp ${source_list})
lto(tests)
find_package(GTest REQUIRED) # Found GTest: build/linux/clang/vcpkg_installed/x64-linux/share/GTest/GTestConfig.cmake (found version "1.11.0")
target_link_libraries(tests PRIVATE GTest::gtest GTest::gtest_main)
target_include_directories(tests PUBLIC ./include)
set_target_properties(tests PROPERTIES LINKER_LANGUAGE CXX)
gtest_discover_tests(tests)
target_include_directories(${staticLib} PUBLIC ./include)
set_target_properties(${staticLib} PROPERTIES LINKER_LANGUAGE CXX)
